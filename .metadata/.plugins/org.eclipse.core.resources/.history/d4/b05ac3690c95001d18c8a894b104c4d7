package com.reda.studentmicroserver.universitymicroservice.controller;

import java.util.ArrayList;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand;
import com.reda.studentmicroserver.universitymicroservice.entity.University;
import com.reda.studentmicroserver.universitymicroservice.model.Student;
import com.reda.studentmicroserver.universitymicroservice.model.StudentUniversity;
import com.reda.studentmicroserver.universitymicroservice.repositories.UniversityRepo;

@RestController
@RequestMapping("/university")
public class UniversityController {
	
	@Autowired
	private UniversityRepo repo;
	
	@Autowired
	private RestTemplate restTemplate;
	
	@PostMapping(path="/add")
	public University addUniversity(@RequestBody University university)
	{
		repo.save(university);
		
		return university;		
	}
	
	@RequestMapping(path="/id/{universityCode}")
	@HystrixCommand(fallbackMethod ="handlePatientDownTime")
	public StudentUniversity getDataByUniversityId(@PathVariable("universityCode") Integer universityCode)
	{
		StudentUniversity studentUniversity = new StudentUniversity();
		
		//get University details
		University university = repo.findByuniversityCode(universityCode);
		studentUniversity.setUniversity(university);
		
		//get all student  registered in university
        ArrayList<Student> student = restTemplate.getForObject("http://STUDENT-MICROSERVICE-SERVICE/student/id/"+universityCode,ArrayList.class);
		studentUniversity.setStudentList(student);	
		
		return repo.findByuniversityCode(universityCode);
		
		
		
	}
	
	public ResponseEntity<StudentUniversity> handlePatientDownTime(@PathVariable Integer universityCode)
	{
		StudentUniversity studentUniversity = new StudentUniversity();	
		//get University details
		University clinic = repo.findByuniversityCode(universityCode);
		studentUniversity.setUniversity(clinic);	
		
		return new ResponseEntity<StudentUniversity>(studentUniversity,HttpStatus.OK);
			
	}

}
